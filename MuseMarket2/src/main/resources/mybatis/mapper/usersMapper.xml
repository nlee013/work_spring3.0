<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.boot.mapper.UsersMapper">

<select id="login" parameterType="com.spring.boot.dto.UsersDTO" resultType="com.spring.boot.dto.UsersDTO"> 
	select userNo, userId, userPwd, userName, userEmail, userAddr, 
	userTel, userGender, userBirth from users where userId = #{userId} and userPwd = #{userPwd} 
</select>

<insert id="write"> 
	insert into users(userNo, userId, userPwd, userName, userEmail, userAddr, 
	userTel, userGender, userBirth) values (users_seq.nextval,#{userId},#{userPwd},#{userName},
	#{userEmail},#{userAddr},#{userTel},#{userGender},#{userBirth}) 
</insert>

<select id="userIdChk" parameterType="com.spring.boot.dto.UsersDTO" resultType="Integer"> 
	select count(*) from users where userId = #{userId} 
</select>

<select id="getReadData" parameterType="int" resultType="com.spring.boot.dto.UsersDTO">
	select userNo,userId,userPwd,userName,userEmail,
	userAddr,userTel, userGender,userBirth from users where userNo=#{userNo}
</select>

<select id="getDataCount" parameterType="hashMap" resultType="int">
		select nvl(count(*), 0) from users
		where ${searchKey} like '%' || #{searchValue} || '%'
</select>

	<select id="getList" parameterType="map" resultType="com.spring.boot.dto.UsersDTO">
		select*from(
		select rownum rnum, data.* from(
		select userNo, userId, userPwd, userName, userEmail,
		userAddr, userTel, userGender, userBirth 
		from users where ${searchKey} like '%' || #{searchValue} || '%'
		order by userNo desc) data)
	<![CDATA[
		where rnum>=#{start} and rnum<=#{end}
	]]>
	</select>
	
	<update id="updateData" parameterType="com.spring.boot.dto.UsersDTO">
	update users set
	userId=#{userId, jdbcType=VARCHAR}, userPwd=#{userPwd, jdbcType=VARCHAR},
	userName=#{userName, jdbcType=VARCHAR}, userEmail=#{userEmail, jdbcType=VARCHAR},
	userAddr=#{userAddr, jdbcType=VARCHAR}, userTel=#{userTel, jdbcType=VARCHAR},
	userGender=#{userGender, jdbcType=VARCHAR}, userBirth=#{userBirth, jdbcType=VARCHAR}
	where userNo=#{userNo}
	</update>
</mapper>